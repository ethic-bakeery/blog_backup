import {
  e
} from "./chunk-5FILQN6B.js";
import "./chunk-5WRI5ZAA.js";

// node_modules/@swup/theme/dist/index.modern.js
var t = class extends e {
  constructor(...e2) {
    super(...e2), this._originalAnimationSelectorOption = "", this._addedStyleElements = [], this._addedHTMLContent = [], this._classNameAddedToElements = [], this._addClassNameToElement = () => {
      this._classNameAddedToElements.forEach((e3) => {
        Array.from(document.querySelectorAll(e3.selector)).forEach((t2) => {
          t2.classList.add(`swup-transition-${e3.name}`);
        });
      });
    };
  }
  _beforeMount() {
    this._originalAnimationSelectorOption = String(this.swup.options.animationSelector), this.swup.options.animationSelector = '[class*="swup-transition-"]', this.swup.hooks.on("content:replace", this._addClassNameToElement);
  }
  _afterUnmount() {
    this.swup.options.animationSelector = this._originalAnimationSelectorOption, this._addedStyleElements.forEach((e2) => {
      e2.outerHTML = "";
    }), this._addedStyleElements = [], this._addedHTMLContent.forEach((e2) => {
      e2.outerHTML = "";
    }), this._addedHTMLContent = [], this._classNameAddedToElements.forEach((e2) => {
      Array.from(document.querySelectorAll(e2.selector)).forEach((e3) => {
        e3.className.split(" ").forEach((t2) => {
          new RegExp("^swup-transition-").test(t2) && e3.classList.remove(t2);
        });
      });
    }), this.swup.hooks.off("content:replace", this._addClassNameToElement);
  }
  applyStyles(e2) {
    const t2 = document.createElement("style");
    t2.setAttribute("data-swup-theme", ""), t2.appendChild(document.createTextNode(e2)), document.head.prepend(t2), this._addedStyleElements.push(t2);
  }
  applyHTML(e2) {
    const t2 = document.createElement("div");
    t2.innerHTML = e2, document.body.appendChild(t2), this._addedHTMLContent.push(t2);
  }
  addClassName(e2, t2) {
    this._classNameAddedToElements.push({ selector: e2, name: t2 }), this._addClassNameToElement();
  }
};

// node_modules/@swup/fade-theme/dist/index.modern.js
function a() {
  return a = Object.assign ? Object.assign.bind() : function(t2) {
    for (var a2 = 1; a2 < arguments.length; a2++) {
      var n2 = arguments[a2];
      for (var i in n2) ({}).hasOwnProperty.call(n2, i) && (t2[i] = n2[i]);
    }
    return t2;
  }, a.apply(null, arguments);
}
var n = class extends t {
  constructor(t2 = {}) {
    super(), this.name = "SwupFadeTheme", this.defaults = { mainElement: "#swup" }, this.options = a({}, this.defaults, t2);
  }
  mount() {
    this.applyStyles("html{--swup-fade-theme-duration:.4s}html.is-changing .swup-transition-main{opacity:1;transition:opacity var(--swup-fade-theme-duration)}html.is-animating .swup-transition-main{opacity:0}"), this.addClassName(this.options.mainElement, "main");
  }
};
export {
  n as default
};
//# sourceMappingURL=@swup_astro_client_SwupFadeTheme.js.map
